Ok (WithComments Nothing (Node { end = { column = 63, row = 1 }, start = { column = 1, row = 1 } } (FunctionDeclaration { declaration = Node { end = { column = 63, row = 1 }, start = { column = 1, row = 1 } } { arguments = [Node { end = { column = 9, row = 1 }, start = { column = 5, row = 1 } } (VarPattern "func"),Node { end = { column = 13, row = 1 }, start = { column = 10, row = 1 } } (VarPattern "set")], expression = Node { end = { column = 63, row = 1 }, start = { column = 16, row = 1 } } (Application [Node { end = { column = 24, row = 1 }, start = { column = 16, row = 1 } } (FunctionOrValue [] "fromList"),Node { end = { column = 63, row = 1 }, start = { column = 25, row = 1 } } (ParenthesizedExpression (Node { end = { column = 62, row = 1 }, start = { column = 26, row = 1 } } (Application [Node { end = { column = 31, row = 1 }, start = { column = 26, row = 1 } } (FunctionOrValue [] "foldl"),Node { end = { column = 55, row = 1 }, start = { column = 32, row = 1 } } (ParenthesizedExpression (Node { end = { column = 54, row = 1 }, start = { column = 33, row = 1 } } (LambdaExpression { args = [Node { end = { column = 35, row = 1 }, start = { column = 34, row = 1 } } (VarPattern "x"),Node { end = { column = 38, row = 1 }, start = { column = 36, row = 1 } } (VarPattern "xs")], expression = Node { end = { column = 54, row = 1 }, start = { column = 42, row = 1 } } (OperatorApplication "::" Right (Node { end = { column = 48, row = 1 }, start = { column = 42, row = 1 } } (Application [Node { end = { column = 46, row = 1 }, start = { column = 42, row = 1 } } (FunctionOrValue [] "func"),Node { end = { column = 48, row = 1 }, start = { column = 47, row = 1 } } (FunctionOrValue [] "x")])) (Node { end = { column = 54, row = 1 }, start = { column = 52, row = 1 } } (FunctionOrValue [] "xs"))) }))),Node { end = { column = 58, row = 1 }, start = { column = 56, row = 1 } } (ListExpr []),Node { end = { column = 62, row = 1 }, start = { column = 59, row = 1 } } (FunctionOrValue [] "set")])))]), name = Node { end = { column = 4, row = 1 }, start = { column = 1, row = 1 } } "map" }, documentation = Nothing, signature = Nothing })))